// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storage_service.proto

#include "storage_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_storage_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLatestPageRequest_PageID_storage_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_storage_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetOldPageRequest_PageID_storage_5fservice_2eproto;
namespace storage_service {
class LogWriteRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogWriteRequest> _instance;
} _LogWriteRequest_default_instance_;
class LogWriteResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogWriteResponse> _instance;
} _LogWriteResponse_default_instance_;
class GetLatestPageRequest_PageIDDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLatestPageRequest_PageID> _instance;
} _GetLatestPageRequest_PageID_default_instance_;
class GetLatestPageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLatestPageRequest> _instance;
} _GetLatestPageRequest_default_instance_;
class GetLatestPageResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLatestPageResponse> _instance;
} _GetLatestPageResponse_default_instance_;
class GetOldPageRequest_PageIDDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOldPageRequest_PageID> _instance;
} _GetOldPageRequest_PageID_default_instance_;
class GetOldPageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOldPageRequest> _instance;
} _GetOldPageRequest_default_instance_;
class GetOldPageResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOldPageResponse> _instance;
} _GetOldPageResponse_default_instance_;
class GetPersistLsnRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPersistLsnRequest> _instance;
} _GetPersistLsnRequest_default_instance_;
class GetPersistLsnResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPersistLsnResponse> _instance;
} _GetPersistLsnResponse_default_instance_;
}  // namespace storage_service
static void InitDefaultsscc_info_GetLatestPageRequest_storage_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::storage_service::_GetLatestPageRequest_default_instance_;
    new (ptr) ::storage_service::GetLatestPageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::storage_service::GetLatestPageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetLatestPageRequest_storage_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetLatestPageRequest_storage_5fservice_2eproto}, {
      &scc_info_GetLatestPageRequest_PageID_storage_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_GetLatestPageRequest_PageID_storage_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::storage_service::_GetLatestPageRequest_PageID_default_instance_;
    new (ptr) ::storage_service::GetLatestPageRequest_PageID();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::storage_service::GetLatestPageRequest_PageID::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLatestPageRequest_PageID_storage_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetLatestPageRequest_PageID_storage_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetLatestPageResponse_storage_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::storage_service::_GetLatestPageResponse_default_instance_;
    new (ptr) ::storage_service::GetLatestPageResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::storage_service::GetLatestPageResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLatestPageResponse_storage_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetLatestPageResponse_storage_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetOldPageRequest_storage_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::storage_service::_GetOldPageRequest_default_instance_;
    new (ptr) ::storage_service::GetOldPageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::storage_service::GetOldPageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetOldPageRequest_storage_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetOldPageRequest_storage_5fservice_2eproto}, {
      &scc_info_GetOldPageRequest_PageID_storage_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_GetOldPageRequest_PageID_storage_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::storage_service::_GetOldPageRequest_PageID_default_instance_;
    new (ptr) ::storage_service::GetOldPageRequest_PageID();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::storage_service::GetOldPageRequest_PageID::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetOldPageRequest_PageID_storage_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetOldPageRequest_PageID_storage_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetOldPageResponse_storage_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::storage_service::_GetOldPageResponse_default_instance_;
    new (ptr) ::storage_service::GetOldPageResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::storage_service::GetOldPageResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetOldPageResponse_storage_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetOldPageResponse_storage_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetPersistLsnRequest_storage_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::storage_service::_GetPersistLsnRequest_default_instance_;
    new (ptr) ::storage_service::GetPersistLsnRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::storage_service::GetPersistLsnRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPersistLsnRequest_storage_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetPersistLsnRequest_storage_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetPersistLsnResponse_storage_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::storage_service::_GetPersistLsnResponse_default_instance_;
    new (ptr) ::storage_service::GetPersistLsnResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::storage_service::GetPersistLsnResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPersistLsnResponse_storage_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetPersistLsnResponse_storage_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_LogWriteRequest_storage_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::storage_service::_LogWriteRequest_default_instance_;
    new (ptr) ::storage_service::LogWriteRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::storage_service::LogWriteRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogWriteRequest_storage_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LogWriteRequest_storage_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_LogWriteResponse_storage_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::storage_service::_LogWriteResponse_default_instance_;
    new (ptr) ::storage_service::LogWriteResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::storage_service::LogWriteResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogWriteResponse_storage_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LogWriteResponse_storage_5fservice_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_storage_5fservice_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_storage_5fservice_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* file_level_service_descriptors_storage_5fservice_2eproto[1];

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_storage_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::storage_service::LogWriteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::storage_service::LogWriteRequest, log_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::storage_service::LogWriteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetLatestPageRequest_PageID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetLatestPageRequest_PageID, table_id_),
  PROTOBUF_FIELD_OFFSET(::storage_service::GetLatestPageRequest_PageID, slice_id_),
  PROTOBUF_FIELD_OFFSET(::storage_service::GetLatestPageRequest_PageID, page_no_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetLatestPageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetLatestPageRequest, page_id_),
  PROTOBUF_FIELD_OFFSET(::storage_service::GetLatestPageRequest, latest_lsn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetLatestPageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetLatestPageResponse, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetOldPageRequest_PageID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetOldPageRequest_PageID, table_id_),
  PROTOBUF_FIELD_OFFSET(::storage_service::GetOldPageRequest_PageID, slice_id_),
  PROTOBUF_FIELD_OFFSET(::storage_service::GetOldPageRequest_PageID, page_no_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetOldPageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetOldPageRequest, page_id_),
  PROTOBUF_FIELD_OFFSET(::storage_service::GetOldPageRequest, active_trx_ids_),
  PROTOBUF_FIELD_OFFSET(::storage_service::GetOldPageRequest, up_limit_id_),
  PROTOBUF_FIELD_OFFSET(::storage_service::GetOldPageRequest, low_limit_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetOldPageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetOldPageResponse, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetPersistLsnRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetPersistLsnResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::storage_service::GetPersistLsnResponse, persist_lsn_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::storage_service::LogWriteRequest)},
  { 6, -1, sizeof(::storage_service::LogWriteResponse)},
  { 11, -1, sizeof(::storage_service::GetLatestPageRequest_PageID)},
  { 19, -1, sizeof(::storage_service::GetLatestPageRequest)},
  { 26, -1, sizeof(::storage_service::GetLatestPageResponse)},
  { 32, -1, sizeof(::storage_service::GetOldPageRequest_PageID)},
  { 40, -1, sizeof(::storage_service::GetOldPageRequest)},
  { 49, -1, sizeof(::storage_service::GetOldPageResponse)},
  { 55, -1, sizeof(::storage_service::GetPersistLsnRequest)},
  { 60, -1, sizeof(::storage_service::GetPersistLsnResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::storage_service::_LogWriteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::storage_service::_LogWriteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::storage_service::_GetLatestPageRequest_PageID_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::storage_service::_GetLatestPageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::storage_service::_GetLatestPageResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::storage_service::_GetOldPageRequest_PageID_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::storage_service::_GetOldPageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::storage_service::_GetOldPageResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::storage_service::_GetPersistLsnRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::storage_service::_GetPersistLsnResponse_default_instance_),
};

const char descriptor_table_protodef_storage_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025storage_service.proto\022\017storage_service"
  "\"\036\n\017LogWriteRequest\022\013\n\003log\030\001 \001(\014\"\022\n\020LogW"
  "riteResponse\"\250\001\n\024GetLatestPageRequest\022=\n"
  "\007page_id\030\001 \003(\0132,.storage_service.GetLate"
  "stPageRequest.PageID\022\022\n\nlatest_lsn\030\002 \003(\021"
  "\032=\n\006PageID\022\020\n\010table_id\030\001 \001(\021\022\020\n\010slice_id"
  "\030\002 \001(\021\022\017\n\007page_no\030\003 \001(\021\"%\n\025GetLatestPage"
  "Response\022\014\n\004data\030\001 \003(\014\"\321\001\n\021GetOldPageReq"
  "uest\022:\n\007page_id\030\001 \003(\0132).storage_service."
  "GetOldPageRequest.PageID\022\026\n\016active_trx_i"
  "ds\030\002 \003(\021\022\023\n\013up_limit_id\030\003 \001(\021\022\024\n\014low_lim"
  "it_id\030\004 \001(\021\032=\n\006PageID\022\020\n\010table_id\030\001 \001(\021\022"
  "\020\n\010slice_id\030\002 \001(\021\022\017\n\007page_no\030\003 \001(\021\"\"\n\022Ge"
  "tOldPageResponse\022\014\n\004data\030\001 \003(\014\"\026\n\024GetPer"
  "sistLsnRequest\",\n\025GetPersistLsnResponse\022"
  "\023\n\013persist_lsn\030\001 \001(\0212\370\002\n\016StorageService\022"
  "O\n\010LogWrite\022 .storage_service.LogWriteRe"
  "quest\032!.storage_service.LogWriteResponse"
  "\022U\n\nGetOldPage\022\".storage_service.GetOldP"
  "ageRequest\032#.storage_service.GetOldPageR"
  "esponse\022^\n\rGetLatestPage\022%.storage_servi"
  "ce.GetLatestPageRequest\032&.storage_servic"
  "e.GetLatestPageResponse\022^\n\rGetPersistLsn"
  "\022%.storage_service.GetPersistLsnRequest\032"
  "&.storage_service.GetPersistLsnResponseB"
  "\003\200\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_storage_5fservice_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_storage_5fservice_2eproto_sccs[10] = {
  &scc_info_GetLatestPageRequest_storage_5fservice_2eproto.base,
  &scc_info_GetLatestPageRequest_PageID_storage_5fservice_2eproto.base,
  &scc_info_GetLatestPageResponse_storage_5fservice_2eproto.base,
  &scc_info_GetOldPageRequest_storage_5fservice_2eproto.base,
  &scc_info_GetOldPageRequest_PageID_storage_5fservice_2eproto.base,
  &scc_info_GetOldPageResponse_storage_5fservice_2eproto.base,
  &scc_info_GetPersistLsnRequest_storage_5fservice_2eproto.base,
  &scc_info_GetPersistLsnResponse_storage_5fservice_2eproto.base,
  &scc_info_LogWriteRequest_storage_5fservice_2eproto.base,
  &scc_info_LogWriteResponse_storage_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_storage_5fservice_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_storage_5fservice_2eproto = {
  false, false, descriptor_table_protodef_storage_5fservice_2eproto, "storage_service.proto", 1012,
  &descriptor_table_storage_5fservice_2eproto_once, descriptor_table_storage_5fservice_2eproto_sccs, descriptor_table_storage_5fservice_2eproto_deps, 10, 0,
  schemas, file_default_instances, TableStruct_storage_5fservice_2eproto::offsets,
  file_level_metadata_storage_5fservice_2eproto, 10, file_level_enum_descriptors_storage_5fservice_2eproto, file_level_service_descriptors_storage_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_storage_5fservice_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_storage_5fservice_2eproto)), true);
namespace storage_service {

// ===================================================================

void LogWriteRequest::InitAsDefaultInstance() {
}
class LogWriteRequest::_Internal {
 public:
};

LogWriteRequest::LogWriteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:storage_service.LogWriteRequest)
}
LogWriteRequest::LogWriteRequest(const LogWriteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  log_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_log().empty()) {
    log_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_log(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:storage_service.LogWriteRequest)
}

void LogWriteRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LogWriteRequest_storage_5fservice_2eproto.base);
  log_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LogWriteRequest::~LogWriteRequest() {
  // @@protoc_insertion_point(destructor:storage_service.LogWriteRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LogWriteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  log_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LogWriteRequest::ArenaDtor(void* object) {
  LogWriteRequest* _this = reinterpret_cast< LogWriteRequest* >(object);
  (void)_this;
}
void LogWriteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LogWriteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogWriteRequest& LogWriteRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogWriteRequest_storage_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LogWriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:storage_service.LogWriteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  log_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogWriteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes log = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_log();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogWriteRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:storage_service.LogWriteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes log = 1;
  if (this->log().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_log(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:storage_service.LogWriteRequest)
  return target;
}

size_t LogWriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:storage_service.LogWriteRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes log = 1;
  if (this->log().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_log());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogWriteRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storage_service.LogWriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LogWriteRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogWriteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storage_service.LogWriteRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storage_service.LogWriteRequest)
    MergeFrom(*source);
  }
}

void LogWriteRequest::MergeFrom(const LogWriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storage_service.LogWriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.log().size() > 0) {
    _internal_set_log(from._internal_log());
  }
}

void LogWriteRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storage_service.LogWriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogWriteRequest::CopyFrom(const LogWriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storage_service.LogWriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogWriteRequest::IsInitialized() const {
  return true;
}

void LogWriteRequest::InternalSwap(LogWriteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  log_.Swap(&other->log_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata LogWriteRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LogWriteResponse::InitAsDefaultInstance() {
}
class LogWriteResponse::_Internal {
 public:
};

LogWriteResponse::LogWriteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:storage_service.LogWriteResponse)
}
LogWriteResponse::LogWriteResponse(const LogWriteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:storage_service.LogWriteResponse)
}

void LogWriteResponse::SharedCtor() {
}

LogWriteResponse::~LogWriteResponse() {
  // @@protoc_insertion_point(destructor:storage_service.LogWriteResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LogWriteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LogWriteResponse::ArenaDtor(void* object) {
  LogWriteResponse* _this = reinterpret_cast< LogWriteResponse* >(object);
  (void)_this;
}
void LogWriteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LogWriteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogWriteResponse& LogWriteResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogWriteResponse_storage_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LogWriteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:storage_service.LogWriteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogWriteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogWriteResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:storage_service.LogWriteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:storage_service.LogWriteResponse)
  return target;
}

size_t LogWriteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:storage_service.LogWriteResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogWriteResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storage_service.LogWriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LogWriteResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogWriteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storage_service.LogWriteResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storage_service.LogWriteResponse)
    MergeFrom(*source);
  }
}

void LogWriteResponse::MergeFrom(const LogWriteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storage_service.LogWriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LogWriteResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storage_service.LogWriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogWriteResponse::CopyFrom(const LogWriteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storage_service.LogWriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogWriteResponse::IsInitialized() const {
  return true;
}

void LogWriteResponse::InternalSwap(LogWriteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogWriteResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLatestPageRequest_PageID::InitAsDefaultInstance() {
}
class GetLatestPageRequest_PageID::_Internal {
 public:
};

GetLatestPageRequest_PageID::GetLatestPageRequest_PageID(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:storage_service.GetLatestPageRequest.PageID)
}
GetLatestPageRequest_PageID::GetLatestPageRequest_PageID(const GetLatestPageRequest_PageID& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&table_id_, &from.table_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_no_) -
    reinterpret_cast<char*>(&table_id_)) + sizeof(page_no_));
  // @@protoc_insertion_point(copy_constructor:storage_service.GetLatestPageRequest.PageID)
}

void GetLatestPageRequest_PageID::SharedCtor() {
  ::memset(&table_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_no_) -
      reinterpret_cast<char*>(&table_id_)) + sizeof(page_no_));
}

GetLatestPageRequest_PageID::~GetLatestPageRequest_PageID() {
  // @@protoc_insertion_point(destructor:storage_service.GetLatestPageRequest.PageID)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLatestPageRequest_PageID::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetLatestPageRequest_PageID::ArenaDtor(void* object) {
  GetLatestPageRequest_PageID* _this = reinterpret_cast< GetLatestPageRequest_PageID* >(object);
  (void)_this;
}
void GetLatestPageRequest_PageID::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLatestPageRequest_PageID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLatestPageRequest_PageID& GetLatestPageRequest_PageID::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLatestPageRequest_PageID_storage_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetLatestPageRequest_PageID::Clear() {
// @@protoc_insertion_point(message_clear_start:storage_service.GetLatestPageRequest.PageID)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&table_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_no_) -
      reinterpret_cast<char*>(&table_id_)) + sizeof(page_no_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLatestPageRequest_PageID::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 table_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          table_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 slice_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          slice_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 page_no = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          page_no_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLatestPageRequest_PageID::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:storage_service.GetLatestPageRequest.PageID)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 table_id = 1;
  if (this->table_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_table_id(), target);
  }

  // sint32 slice_id = 2;
  if (this->slice_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_slice_id(), target);
  }

  // sint32 page_no = 3;
  if (this->page_no() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(3, this->_internal_page_no(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:storage_service.GetLatestPageRequest.PageID)
  return target;
}

size_t GetLatestPageRequest_PageID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:storage_service.GetLatestPageRequest.PageID)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 table_id = 1;
  if (this->table_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_table_id());
  }

  // sint32 slice_id = 2;
  if (this->slice_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_slice_id());
  }

  // sint32 page_no = 3;
  if (this->page_no() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_page_no());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLatestPageRequest_PageID::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storage_service.GetLatestPageRequest.PageID)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLatestPageRequest_PageID* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLatestPageRequest_PageID>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storage_service.GetLatestPageRequest.PageID)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storage_service.GetLatestPageRequest.PageID)
    MergeFrom(*source);
  }
}

void GetLatestPageRequest_PageID::MergeFrom(const GetLatestPageRequest_PageID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storage_service.GetLatestPageRequest.PageID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table_id() != 0) {
    _internal_set_table_id(from._internal_table_id());
  }
  if (from.slice_id() != 0) {
    _internal_set_slice_id(from._internal_slice_id());
  }
  if (from.page_no() != 0) {
    _internal_set_page_no(from._internal_page_no());
  }
}

void GetLatestPageRequest_PageID::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storage_service.GetLatestPageRequest.PageID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLatestPageRequest_PageID::CopyFrom(const GetLatestPageRequest_PageID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storage_service.GetLatestPageRequest.PageID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLatestPageRequest_PageID::IsInitialized() const {
  return true;
}

void GetLatestPageRequest_PageID::InternalSwap(GetLatestPageRequest_PageID* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLatestPageRequest_PageID, page_no_)
      + sizeof(GetLatestPageRequest_PageID::page_no_)
      - PROTOBUF_FIELD_OFFSET(GetLatestPageRequest_PageID, table_id_)>(
          reinterpret_cast<char*>(&table_id_),
          reinterpret_cast<char*>(&other->table_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLatestPageRequest_PageID::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLatestPageRequest::InitAsDefaultInstance() {
}
class GetLatestPageRequest::_Internal {
 public:
};

GetLatestPageRequest::GetLatestPageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  page_id_(arena),
  latest_lsn_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:storage_service.GetLatestPageRequest)
}
GetLatestPageRequest::GetLatestPageRequest(const GetLatestPageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      page_id_(from.page_id_),
      latest_lsn_(from.latest_lsn_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:storage_service.GetLatestPageRequest)
}

void GetLatestPageRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLatestPageRequest_storage_5fservice_2eproto.base);
}

GetLatestPageRequest::~GetLatestPageRequest() {
  // @@protoc_insertion_point(destructor:storage_service.GetLatestPageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLatestPageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetLatestPageRequest::ArenaDtor(void* object) {
  GetLatestPageRequest* _this = reinterpret_cast< GetLatestPageRequest* >(object);
  (void)_this;
}
void GetLatestPageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLatestPageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLatestPageRequest& GetLatestPageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLatestPageRequest_storage_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetLatestPageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:storage_service.GetLatestPageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_id_.Clear();
  latest_lsn_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLatestPageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .storage_service.GetLatestPageRequest.PageID page_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_page_id(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated sint32 latest_lsn = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedSInt32Parser(_internal_mutable_latest_lsn(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_latest_lsn(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLatestPageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:storage_service.GetLatestPageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .storage_service.GetLatestPageRequest.PageID page_id = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_page_id_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_page_id(i), target, stream);
  }

  // repeated sint32 latest_lsn = 2;
  {
    int byte_size = _latest_lsn_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteSInt32Packed(
          2, _internal_latest_lsn(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:storage_service.GetLatestPageRequest)
  return target;
}

size_t GetLatestPageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:storage_service.GetLatestPageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .storage_service.GetLatestPageRequest.PageID page_id = 1;
  total_size += 1UL * this->_internal_page_id_size();
  for (const auto& msg : this->page_id_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated sint32 latest_lsn = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      SInt32Size(this->latest_lsn_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _latest_lsn_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLatestPageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storage_service.GetLatestPageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLatestPageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLatestPageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storage_service.GetLatestPageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storage_service.GetLatestPageRequest)
    MergeFrom(*source);
  }
}

void GetLatestPageRequest::MergeFrom(const GetLatestPageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storage_service.GetLatestPageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  page_id_.MergeFrom(from.page_id_);
  latest_lsn_.MergeFrom(from.latest_lsn_);
}

void GetLatestPageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storage_service.GetLatestPageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLatestPageRequest::CopyFrom(const GetLatestPageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storage_service.GetLatestPageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLatestPageRequest::IsInitialized() const {
  return true;
}

void GetLatestPageRequest::InternalSwap(GetLatestPageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  page_id_.InternalSwap(&other->page_id_);
  latest_lsn_.InternalSwap(&other->latest_lsn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLatestPageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLatestPageResponse::InitAsDefaultInstance() {
}
class GetLatestPageResponse::_Internal {
 public:
};

GetLatestPageResponse::GetLatestPageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:storage_service.GetLatestPageResponse)
}
GetLatestPageResponse::GetLatestPageResponse(const GetLatestPageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:storage_service.GetLatestPageResponse)
}

void GetLatestPageResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLatestPageResponse_storage_5fservice_2eproto.base);
}

GetLatestPageResponse::~GetLatestPageResponse() {
  // @@protoc_insertion_point(destructor:storage_service.GetLatestPageResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLatestPageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetLatestPageResponse::ArenaDtor(void* object) {
  GetLatestPageResponse* _this = reinterpret_cast< GetLatestPageResponse* >(object);
  (void)_this;
}
void GetLatestPageResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLatestPageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLatestPageResponse& GetLatestPageResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLatestPageResponse_storage_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetLatestPageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:storage_service.GetLatestPageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLatestPageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_data();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLatestPageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:storage_service.GetLatestPageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes data = 1;
  for (int i = 0, n = this->_internal_data_size(); i < n; i++) {
    const auto& s = this->_internal_data(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:storage_service.GetLatestPageResponse)
  return target;
}

size_t GetLatestPageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:storage_service.GetLatestPageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes data = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(data_.size());
  for (int i = 0, n = data_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      data_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLatestPageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storage_service.GetLatestPageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLatestPageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLatestPageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storage_service.GetLatestPageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storage_service.GetLatestPageResponse)
    MergeFrom(*source);
  }
}

void GetLatestPageResponse::MergeFrom(const GetLatestPageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storage_service.GetLatestPageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void GetLatestPageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storage_service.GetLatestPageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLatestPageResponse::CopyFrom(const GetLatestPageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storage_service.GetLatestPageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLatestPageResponse::IsInitialized() const {
  return true;
}

void GetLatestPageResponse::InternalSwap(GetLatestPageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLatestPageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOldPageRequest_PageID::InitAsDefaultInstance() {
}
class GetOldPageRequest_PageID::_Internal {
 public:
};

GetOldPageRequest_PageID::GetOldPageRequest_PageID(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:storage_service.GetOldPageRequest.PageID)
}
GetOldPageRequest_PageID::GetOldPageRequest_PageID(const GetOldPageRequest_PageID& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&table_id_, &from.table_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_no_) -
    reinterpret_cast<char*>(&table_id_)) + sizeof(page_no_));
  // @@protoc_insertion_point(copy_constructor:storage_service.GetOldPageRequest.PageID)
}

void GetOldPageRequest_PageID::SharedCtor() {
  ::memset(&table_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_no_) -
      reinterpret_cast<char*>(&table_id_)) + sizeof(page_no_));
}

GetOldPageRequest_PageID::~GetOldPageRequest_PageID() {
  // @@protoc_insertion_point(destructor:storage_service.GetOldPageRequest.PageID)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOldPageRequest_PageID::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetOldPageRequest_PageID::ArenaDtor(void* object) {
  GetOldPageRequest_PageID* _this = reinterpret_cast< GetOldPageRequest_PageID* >(object);
  (void)_this;
}
void GetOldPageRequest_PageID::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOldPageRequest_PageID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOldPageRequest_PageID& GetOldPageRequest_PageID::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOldPageRequest_PageID_storage_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetOldPageRequest_PageID::Clear() {
// @@protoc_insertion_point(message_clear_start:storage_service.GetOldPageRequest.PageID)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&table_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_no_) -
      reinterpret_cast<char*>(&table_id_)) + sizeof(page_no_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOldPageRequest_PageID::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 table_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          table_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 slice_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          slice_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 page_no = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          page_no_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOldPageRequest_PageID::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:storage_service.GetOldPageRequest.PageID)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 table_id = 1;
  if (this->table_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_table_id(), target);
  }

  // sint32 slice_id = 2;
  if (this->slice_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_slice_id(), target);
  }

  // sint32 page_no = 3;
  if (this->page_no() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(3, this->_internal_page_no(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:storage_service.GetOldPageRequest.PageID)
  return target;
}

size_t GetOldPageRequest_PageID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:storage_service.GetOldPageRequest.PageID)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 table_id = 1;
  if (this->table_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_table_id());
  }

  // sint32 slice_id = 2;
  if (this->slice_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_slice_id());
  }

  // sint32 page_no = 3;
  if (this->page_no() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_page_no());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOldPageRequest_PageID::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storage_service.GetOldPageRequest.PageID)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOldPageRequest_PageID* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOldPageRequest_PageID>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storage_service.GetOldPageRequest.PageID)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storage_service.GetOldPageRequest.PageID)
    MergeFrom(*source);
  }
}

void GetOldPageRequest_PageID::MergeFrom(const GetOldPageRequest_PageID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storage_service.GetOldPageRequest.PageID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table_id() != 0) {
    _internal_set_table_id(from._internal_table_id());
  }
  if (from.slice_id() != 0) {
    _internal_set_slice_id(from._internal_slice_id());
  }
  if (from.page_no() != 0) {
    _internal_set_page_no(from._internal_page_no());
  }
}

void GetOldPageRequest_PageID::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storage_service.GetOldPageRequest.PageID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOldPageRequest_PageID::CopyFrom(const GetOldPageRequest_PageID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storage_service.GetOldPageRequest.PageID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOldPageRequest_PageID::IsInitialized() const {
  return true;
}

void GetOldPageRequest_PageID::InternalSwap(GetOldPageRequest_PageID* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetOldPageRequest_PageID, page_no_)
      + sizeof(GetOldPageRequest_PageID::page_no_)
      - PROTOBUF_FIELD_OFFSET(GetOldPageRequest_PageID, table_id_)>(
          reinterpret_cast<char*>(&table_id_),
          reinterpret_cast<char*>(&other->table_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOldPageRequest_PageID::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOldPageRequest::InitAsDefaultInstance() {
}
class GetOldPageRequest::_Internal {
 public:
};

GetOldPageRequest::GetOldPageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  page_id_(arena),
  active_trx_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:storage_service.GetOldPageRequest)
}
GetOldPageRequest::GetOldPageRequest(const GetOldPageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      page_id_(from.page_id_),
      active_trx_ids_(from.active_trx_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&up_limit_id_, &from.up_limit_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&low_limit_id_) -
    reinterpret_cast<char*>(&up_limit_id_)) + sizeof(low_limit_id_));
  // @@protoc_insertion_point(copy_constructor:storage_service.GetOldPageRequest)
}

void GetOldPageRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOldPageRequest_storage_5fservice_2eproto.base);
  ::memset(&up_limit_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&low_limit_id_) -
      reinterpret_cast<char*>(&up_limit_id_)) + sizeof(low_limit_id_));
}

GetOldPageRequest::~GetOldPageRequest() {
  // @@protoc_insertion_point(destructor:storage_service.GetOldPageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOldPageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetOldPageRequest::ArenaDtor(void* object) {
  GetOldPageRequest* _this = reinterpret_cast< GetOldPageRequest* >(object);
  (void)_this;
}
void GetOldPageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOldPageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOldPageRequest& GetOldPageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOldPageRequest_storage_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetOldPageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:storage_service.GetOldPageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_id_.Clear();
  active_trx_ids_.Clear();
  ::memset(&up_limit_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&low_limit_id_) -
      reinterpret_cast<char*>(&up_limit_id_)) + sizeof(low_limit_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOldPageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .storage_service.GetOldPageRequest.PageID page_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_page_id(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated sint32 active_trx_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedSInt32Parser(_internal_mutable_active_trx_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_active_trx_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 up_limit_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          up_limit_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 low_limit_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          low_limit_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOldPageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:storage_service.GetOldPageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .storage_service.GetOldPageRequest.PageID page_id = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_page_id_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_page_id(i), target, stream);
  }

  // repeated sint32 active_trx_ids = 2;
  {
    int byte_size = _active_trx_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteSInt32Packed(
          2, _internal_active_trx_ids(), byte_size, target);
    }
  }

  // sint32 up_limit_id = 3;
  if (this->up_limit_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(3, this->_internal_up_limit_id(), target);
  }

  // sint32 low_limit_id = 4;
  if (this->low_limit_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(4, this->_internal_low_limit_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:storage_service.GetOldPageRequest)
  return target;
}

size_t GetOldPageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:storage_service.GetOldPageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .storage_service.GetOldPageRequest.PageID page_id = 1;
  total_size += 1UL * this->_internal_page_id_size();
  for (const auto& msg : this->page_id_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated sint32 active_trx_ids = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      SInt32Size(this->active_trx_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _active_trx_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // sint32 up_limit_id = 3;
  if (this->up_limit_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_up_limit_id());
  }

  // sint32 low_limit_id = 4;
  if (this->low_limit_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_low_limit_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOldPageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storage_service.GetOldPageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOldPageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOldPageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storage_service.GetOldPageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storage_service.GetOldPageRequest)
    MergeFrom(*source);
  }
}

void GetOldPageRequest::MergeFrom(const GetOldPageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storage_service.GetOldPageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  page_id_.MergeFrom(from.page_id_);
  active_trx_ids_.MergeFrom(from.active_trx_ids_);
  if (from.up_limit_id() != 0) {
    _internal_set_up_limit_id(from._internal_up_limit_id());
  }
  if (from.low_limit_id() != 0) {
    _internal_set_low_limit_id(from._internal_low_limit_id());
  }
}

void GetOldPageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storage_service.GetOldPageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOldPageRequest::CopyFrom(const GetOldPageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storage_service.GetOldPageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOldPageRequest::IsInitialized() const {
  return true;
}

void GetOldPageRequest::InternalSwap(GetOldPageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  page_id_.InternalSwap(&other->page_id_);
  active_trx_ids_.InternalSwap(&other->active_trx_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetOldPageRequest, low_limit_id_)
      + sizeof(GetOldPageRequest::low_limit_id_)
      - PROTOBUF_FIELD_OFFSET(GetOldPageRequest, up_limit_id_)>(
          reinterpret_cast<char*>(&up_limit_id_),
          reinterpret_cast<char*>(&other->up_limit_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOldPageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOldPageResponse::InitAsDefaultInstance() {
}
class GetOldPageResponse::_Internal {
 public:
};

GetOldPageResponse::GetOldPageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:storage_service.GetOldPageResponse)
}
GetOldPageResponse::GetOldPageResponse(const GetOldPageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:storage_service.GetOldPageResponse)
}

void GetOldPageResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOldPageResponse_storage_5fservice_2eproto.base);
}

GetOldPageResponse::~GetOldPageResponse() {
  // @@protoc_insertion_point(destructor:storage_service.GetOldPageResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOldPageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetOldPageResponse::ArenaDtor(void* object) {
  GetOldPageResponse* _this = reinterpret_cast< GetOldPageResponse* >(object);
  (void)_this;
}
void GetOldPageResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOldPageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOldPageResponse& GetOldPageResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOldPageResponse_storage_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetOldPageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:storage_service.GetOldPageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOldPageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_data();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOldPageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:storage_service.GetOldPageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes data = 1;
  for (int i = 0, n = this->_internal_data_size(); i < n; i++) {
    const auto& s = this->_internal_data(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:storage_service.GetOldPageResponse)
  return target;
}

size_t GetOldPageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:storage_service.GetOldPageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes data = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(data_.size());
  for (int i = 0, n = data_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      data_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOldPageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storage_service.GetOldPageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOldPageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOldPageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storage_service.GetOldPageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storage_service.GetOldPageResponse)
    MergeFrom(*source);
  }
}

void GetOldPageResponse::MergeFrom(const GetOldPageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storage_service.GetOldPageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void GetOldPageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storage_service.GetOldPageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOldPageResponse::CopyFrom(const GetOldPageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storage_service.GetOldPageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOldPageResponse::IsInitialized() const {
  return true;
}

void GetOldPageResponse::InternalSwap(GetOldPageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOldPageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPersistLsnRequest::InitAsDefaultInstance() {
}
class GetPersistLsnRequest::_Internal {
 public:
};

GetPersistLsnRequest::GetPersistLsnRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:storage_service.GetPersistLsnRequest)
}
GetPersistLsnRequest::GetPersistLsnRequest(const GetPersistLsnRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:storage_service.GetPersistLsnRequest)
}

void GetPersistLsnRequest::SharedCtor() {
}

GetPersistLsnRequest::~GetPersistLsnRequest() {
  // @@protoc_insertion_point(destructor:storage_service.GetPersistLsnRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPersistLsnRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetPersistLsnRequest::ArenaDtor(void* object) {
  GetPersistLsnRequest* _this = reinterpret_cast< GetPersistLsnRequest* >(object);
  (void)_this;
}
void GetPersistLsnRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPersistLsnRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPersistLsnRequest& GetPersistLsnRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPersistLsnRequest_storage_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetPersistLsnRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:storage_service.GetPersistLsnRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPersistLsnRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPersistLsnRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:storage_service.GetPersistLsnRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:storage_service.GetPersistLsnRequest)
  return target;
}

size_t GetPersistLsnRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:storage_service.GetPersistLsnRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPersistLsnRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storage_service.GetPersistLsnRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPersistLsnRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPersistLsnRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storage_service.GetPersistLsnRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storage_service.GetPersistLsnRequest)
    MergeFrom(*source);
  }
}

void GetPersistLsnRequest::MergeFrom(const GetPersistLsnRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storage_service.GetPersistLsnRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetPersistLsnRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storage_service.GetPersistLsnRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPersistLsnRequest::CopyFrom(const GetPersistLsnRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storage_service.GetPersistLsnRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPersistLsnRequest::IsInitialized() const {
  return true;
}

void GetPersistLsnRequest::InternalSwap(GetPersistLsnRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPersistLsnRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPersistLsnResponse::InitAsDefaultInstance() {
}
class GetPersistLsnResponse::_Internal {
 public:
};

GetPersistLsnResponse::GetPersistLsnResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:storage_service.GetPersistLsnResponse)
}
GetPersistLsnResponse::GetPersistLsnResponse(const GetPersistLsnResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  persist_lsn_ = from.persist_lsn_;
  // @@protoc_insertion_point(copy_constructor:storage_service.GetPersistLsnResponse)
}

void GetPersistLsnResponse::SharedCtor() {
  persist_lsn_ = 0;
}

GetPersistLsnResponse::~GetPersistLsnResponse() {
  // @@protoc_insertion_point(destructor:storage_service.GetPersistLsnResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPersistLsnResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetPersistLsnResponse::ArenaDtor(void* object) {
  GetPersistLsnResponse* _this = reinterpret_cast< GetPersistLsnResponse* >(object);
  (void)_this;
}
void GetPersistLsnResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPersistLsnResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPersistLsnResponse& GetPersistLsnResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPersistLsnResponse_storage_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetPersistLsnResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:storage_service.GetPersistLsnResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  persist_lsn_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPersistLsnResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 persist_lsn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          persist_lsn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPersistLsnResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:storage_service.GetPersistLsnResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 persist_lsn = 1;
  if (this->persist_lsn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_persist_lsn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:storage_service.GetPersistLsnResponse)
  return target;
}

size_t GetPersistLsnResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:storage_service.GetPersistLsnResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 persist_lsn = 1;
  if (this->persist_lsn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_persist_lsn());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPersistLsnResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storage_service.GetPersistLsnResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPersistLsnResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPersistLsnResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storage_service.GetPersistLsnResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storage_service.GetPersistLsnResponse)
    MergeFrom(*source);
  }
}

void GetPersistLsnResponse::MergeFrom(const GetPersistLsnResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storage_service.GetPersistLsnResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.persist_lsn() != 0) {
    _internal_set_persist_lsn(from._internal_persist_lsn());
  }
}

void GetPersistLsnResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storage_service.GetPersistLsnResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPersistLsnResponse::CopyFrom(const GetPersistLsnResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storage_service.GetPersistLsnResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPersistLsnResponse::IsInitialized() const {
  return true;
}

void GetPersistLsnResponse::InternalSwap(GetPersistLsnResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(persist_lsn_, other->persist_lsn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPersistLsnResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

StorageService::~StorageService() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* StorageService::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_storage_5fservice_2eproto);
  return file_level_service_descriptors_storage_5fservice_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* StorageService::GetDescriptor() {
  return descriptor();
}

void StorageService::LogWrite(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::storage_service::LogWriteRequest*,
                         ::storage_service::LogWriteResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method LogWrite() not implemented.");
  done->Run();
}

void StorageService::GetOldPage(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::storage_service::GetOldPageRequest*,
                         ::storage_service::GetOldPageResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetOldPage() not implemented.");
  done->Run();
}

void StorageService::GetLatestPage(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::storage_service::GetLatestPageRequest*,
                         ::storage_service::GetLatestPageResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetLatestPage() not implemented.");
  done->Run();
}

void StorageService::GetPersistLsn(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::storage_service::GetPersistLsnRequest*,
                         ::storage_service::GetPersistLsnResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetPersistLsn() not implemented.");
  done->Run();
}

void StorageService::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_storage_5fservice_2eproto[0]);
  switch(method->index()) {
    case 0:
      LogWrite(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::storage_service::LogWriteRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::storage_service::LogWriteResponse*>(
                 response),
             done);
      break;
    case 1:
      GetOldPage(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::storage_service::GetOldPageRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::storage_service::GetOldPageResponse*>(
                 response),
             done);
      break;
    case 2:
      GetLatestPage(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::storage_service::GetLatestPageRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::storage_service::GetLatestPageResponse*>(
                 response),
             done);
      break;
    case 3:
      GetPersistLsn(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::storage_service::GetPersistLsnRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::storage_service::GetPersistLsnResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& StorageService::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::storage_service::LogWriteRequest::default_instance();
    case 1:
      return ::storage_service::GetOldPageRequest::default_instance();
    case 2:
      return ::storage_service::GetLatestPageRequest::default_instance();
    case 3:
      return ::storage_service::GetPersistLsnRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& StorageService::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::storage_service::LogWriteResponse::default_instance();
    case 1:
      return ::storage_service::GetOldPageResponse::default_instance();
    case 2:
      return ::storage_service::GetLatestPageResponse::default_instance();
    case 3:
      return ::storage_service::GetPersistLsnResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

StorageService_Stub::StorageService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
StorageService_Stub::StorageService_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
StorageService_Stub::~StorageService_Stub() {
  if (owns_channel_) delete channel_;
}

void StorageService_Stub::LogWrite(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::storage_service::LogWriteRequest* request,
                              ::storage_service::LogWriteResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void StorageService_Stub::GetOldPage(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::storage_service::GetOldPageRequest* request,
                              ::storage_service::GetOldPageResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void StorageService_Stub::GetLatestPage(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::storage_service::GetLatestPageRequest* request,
                              ::storage_service::GetLatestPageResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void StorageService_Stub::GetPersistLsn(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::storage_service::GetPersistLsnRequest* request,
                              ::storage_service::GetPersistLsnResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace storage_service
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::storage_service::LogWriteRequest* Arena::CreateMaybeMessage< ::storage_service::LogWriteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::storage_service::LogWriteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::storage_service::LogWriteResponse* Arena::CreateMaybeMessage< ::storage_service::LogWriteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::storage_service::LogWriteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::storage_service::GetLatestPageRequest_PageID* Arena::CreateMaybeMessage< ::storage_service::GetLatestPageRequest_PageID >(Arena* arena) {
  return Arena::CreateMessageInternal< ::storage_service::GetLatestPageRequest_PageID >(arena);
}
template<> PROTOBUF_NOINLINE ::storage_service::GetLatestPageRequest* Arena::CreateMaybeMessage< ::storage_service::GetLatestPageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::storage_service::GetLatestPageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::storage_service::GetLatestPageResponse* Arena::CreateMaybeMessage< ::storage_service::GetLatestPageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::storage_service::GetLatestPageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::storage_service::GetOldPageRequest_PageID* Arena::CreateMaybeMessage< ::storage_service::GetOldPageRequest_PageID >(Arena* arena) {
  return Arena::CreateMessageInternal< ::storage_service::GetOldPageRequest_PageID >(arena);
}
template<> PROTOBUF_NOINLINE ::storage_service::GetOldPageRequest* Arena::CreateMaybeMessage< ::storage_service::GetOldPageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::storage_service::GetOldPageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::storage_service::GetOldPageResponse* Arena::CreateMaybeMessage< ::storage_service::GetOldPageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::storage_service::GetOldPageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::storage_service::GetPersistLsnRequest* Arena::CreateMaybeMessage< ::storage_service::GetPersistLsnRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::storage_service::GetPersistLsnRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::storage_service::GetPersistLsnResponse* Arena::CreateMaybeMessage< ::storage_service::GetPersistLsnResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::storage_service::GetPersistLsnResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
